# ──────────────────────────────────────────────────────────────────────────────
# Play 1: Base packages + iSCSI on ALL nodes (serialized + robust apt handling)
# ──────────────────────────────────────────────────────────────────────────────
- name: Ensure base packages + iSCSI on all nodes
  hosts: k3s_cluster
  become: yes
  serial: 1
  vars:
    base_packages:
      - curl
      - tar
      - ca-certificates
      - jq
      - nfs-common
      - open-iscsi

  pre_tasks:
    - name: Disable APT sandboxing to avoid _apt permission issues
      copy:
        dest: /etc/apt/apt.conf.d/00disable-sandbox
        owner: root
        group: root
        mode: '0644'
        content: 'APT::Sandbox::User "root";\n'

    - name: Stop apt/upgrade timers (temporary)
      systemd:
        name: "{{ item }}"
        state: stopped
        masked: yes
      loop: [apt-daily.timer, apt-daily-upgrade.timer]
      failed_when: false

    - name: Stop apt/upgrade services (temporary)
      systemd:
        name: "{{ item }}"
        state: stopped
      loop: [apt-daily.service, apt-daily-upgrade.service, unattended-upgrades.service]
      failed_when: false

    - name: Stop PackageKit (can hold apt lock)
      systemd:
        name: packagekit
        state: stopped
        masked: yes
      failed_when: false

    - block:
        - name: Wait for apt/dpkg locks to be released
          shell: |
            set -e
            for p in apt apt-get dpkg unattended-upgrade packagekitd; do
              pgrep -x "$p" >/dev/null && exit 1
            done
            for f in /var/lib/dpkg/lock-frontend /var/lib/dpkg/lock /var/lib/apt/lists/lock; do
              fuser "$f" >/dev/null 2>&1 && exit 1 || true
            done
          register: apt_locks_free
          retries: 60
          delay: 5
          until: apt_locks_free.rc == 0
          changed_when: false
      rescue:
        - name: Force stop lingering package managers (last resort)
          shell: |
            set -e
            systemctl stop unattended-upgrades || true
            systemctl stop packagekit || true
            pkill -9 -x apt || true
            pkill -9 -x apt-get || true
            pkill -9 -x dpkg || true
            pkill -9 -f unattended-upgrade || true
            pkill -9 -x packagekitd || true
            dpkg --configure -a || true
          changed_when: true
          failed_when: false

  tasks:
    - name: Ensure no package managers are running (safe PID kill loop)
      shell: |
        set -euo pipefail
        for p in apt apt-get dpkg unattended-upgrade packagekitd; do
          pgrep -x "$p" >/dev/null 2>&1 || continue
          for pid in $(pgrep -x "$p"); do kill -9 "$pid" 2>/dev/null || true; done
        done
      args: { executable: /bin/bash }
      changed_when: true
      failed_when: false

    - name: Ensure apt parent directories exist (no owner change)
      file:
        path: "{{ item.path }}"
        state: directory
        mode: "{{ item.mode }}"
      loop:
        - { path: "/var/lib/apt/lists", mode: "0755" }
        - { path: "/var/cache/apt",     mode: "0755" }

    - name: Ensure apt partial directories exist and are _apt-owned
      shell: |
        set -e
        install -d -m 0700 -o _apt -g root /var/lib/apt/lists/partial
        install -d -m 0700 -o _apt -g root /var/cache/apt/archives/partial
        chmod 0700 /var/lib/apt/lists/partial /var/cache/apt/archives/partial
      args: { executable: /bin/bash }
      changed_when: false

    - name: Remove immutable bit from apt/dpkg lock paths (if set)
      shell: |
        for p in /var/lib/apt/lists /var/cache/apt /var/lib/dpkg \
                 /var/lib/apt/lists/lock /var/lib/dpkg/lock /var/lib/dpkg/lock-frontend; do
          chattr -i "$p" 2>/dev/null || true
        done
      args: { executable: /bin/bash }
      changed_when: false
      failed_when: false

    - name: Clear lingering dpkg/apt lock files (robust)
      shell: |
        set -e
        for f in /var/lib/dpkg/lock-frontend /var/lib/dpkg/lock /var/lib/apt/lists/lock; do
          [ -e "$f" ] || continue
          for i in 1 2 3 4 5 6; do
            rm -f "$f" 2>/dev/null && break || true
            sleep 1
          done
        done
      args: { executable: /bin/bash }
      changed_when: true
      failed_when: false

    - name: Ensure dpkg is configured (in case of partial runs)
      shell: dpkg --configure -a || true
      changed_when: false

    - name: Clean and rebuild apt lists structure (idempotent)
      shell: |
        set -e
        rm -rf /var/lib/apt/lists/partial 2>/dev/null || true
        install -d -m 0700 -o _apt -g root /var/lib/apt/lists/partial
        apt-get clean
      args: { executable: /bin/bash }
      changed_when: false
      failed_when: false

    - name: Install base packages (incl. open-iscsi) — fallback shell
      shell: |
        set -e
        umask 022
        export DEBIAN_FRONTEND=noninteractive
        for i in {1..10}; do
          apt-get update && \
          apt-get install -y --no-install-recommends {{ base_packages | join(' ') }} && exit 0
          echo "apt busy or EACCES, retry $i/10…"
          sleep 8
        done
        echo "apt failed after retries" >&2
        exit 1
      args: { executable: /bin/bash }

    - name: Enable and start iscsid
      systemd:
        name: iscsid
        enabled: yes
        state: started

  post_tasks:
    - name: Re-enable apt timers
      systemd:
        name: "{{ item }}"
        state: started
        masked: no
      loop: [apt-daily.timer, apt-daily-upgrade.timer]
      failed_when: false

    - name: Unmask PackageKit (optional)
      systemd:
        name: packagekit
        masked: no
      failed_when: false
