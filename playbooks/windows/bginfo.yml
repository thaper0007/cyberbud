---
- name: Deploy BGInfo files to NETLOGON and create User Logon GPO
  hosts: windows_servers
  gather_facts: no

  vars:
    bginfo_url:    "https://www.dropbox.com/scl/fi/7di71bkr96osmuuy54sxl/Bginfo.exe?rlkey=kjxoykquz24rl9ihmkat02vvk&st=6ax9kmr3&dl=1"
    bg_config_url: "https://www.dropbox.com/scl/fi/7ebcio36fvr1zrci8dvwk/bg_config.bgi?rlkey=8nljr7cg7gpdguc1ckmnqjg9r&st=hib8pf9i&dl=1"
    wallpaper_url: "https://www.dropbox.com/scl/fi/n2y8fx1r2m95zciwpuutk/wallpaper.jpg?rlkey=7zuuqyfsmgwin05xvjkyzaaq2&st=l1lservo&dl=1"
    apply_bat_url: "https://www.dropbox.com/scl/fi/7ebcio36fvr1zrci8dvwk/bg_config.bgi?rlkey=8nljr7cg7gpdguc1ckmnqjg9r&st=hhkprurr&dl=1"
    bginfo_dir_name: "bginfo"
    gpo_name: "BGInfo"
    gpo_link_target: ""  # Leave empty for domain root

  tasks:
    - name: Get AD domain DNS and DN (run once on DC)
      ansible.windows.win_shell: |
        Import-Module ActiveDirectory
        $domainDns = (Get-ADDomain).DNSRoot
        $domainDN  = (Get-ADDomain).DistinguishedName
        Write-Output "$domainDns|$domainDN"
      register: domain_info
      run_once: yes
      delegate_to: srv-home
      args:
        executable: powershell.exe

    - name: Set domain facts
      set_fact:
        domain_dns: "{{ domain_info.stdout.split('|')[0] }}"
        domain_dn: "{{ domain_info.stdout.split('|')[1] }}"

    - name: Ensure NETLOGON bginfo folder exists (SYSVOL path)
      ansible.windows.win_file:
        path: "C:\\Windows\\SYSVOL\\sysvol\\{{ domain_dns }}\\{{ bginfo_dir_name }}"
        state: directory

    - name: Download BGInfo.exe into NETLOGON bginfo
      ansible.windows.win_get_url:
        url: "{{ bginfo_url }}"
        dest: "C:\\Windows\\SYSVOL\\sysvol\\{{ domain_dns }}\\{{ bginfo_dir_name }}\\BGInfo.exe"
        force: yes
        validate_certs: no

    - name: Download bg_config.bgi into NETLOGON bginfo
      ansible.windows.win_get_url:
        url: "{{ bg_config_url }}"
        dest: "C:\\Windows\\SYSVOL\\sysvol\\{{ domain_dns }}\\{{ bginfo_dir_name }}\\bg_config.bgi"
        force: yes
        validate_certs: no

    - name: Download wallpaper.jpg into NETLOGON bginfo
      ansible.windows.win_get_url:
        url: "{{ wallpaper_url }}"
        dest: "C:\\Windows\\SYSVOL\\sysvol\\{{ domain_dns }}\\{{ bginfo_dir_name }}\\wallpaper.jpg"
        force: yes
        validate_certs: no

    - name: Download apply_bgi.bat into NETLOGON bginfo
      ansible.windows.win_get_url:
        url: "{{ apply_bat_url }}"
        dest: "C:\\Windows\\SYSVOL\\sysvol\\{{ domain_dns }}\\{{ bginfo_dir_name }}\\apply_bgi.bat"
        force: yes
        validate_certs: no

    - name: Create or get GPO named {{ gpo_name }}
      ansible.windows.win_shell: |
        Import-Module GroupPolicy
        $gpo = Get-GPO -Name "{{ gpo_name }}" -ErrorAction SilentlyContinue
        if (-not $gpo) {
          $gpo = New-GPO -Name "{{ gpo_name }}"
        }
        Write-Output $gpo.Id.Guid
      args:
        executable: powershell.exe
      register: gpo_guid_result

    - name: Set GPO GUID fact
      set_fact:
        gpo_guid: "{{ gpo_guid_result.stdout }}"

    - name: Create GPO User Logon Scripts folder and copy apply_bgi.bat
      ansible.windows.win_shell: |
        $domain = "{{ domain_dns }}"
        $gpoGuid = "{{ gpo_guid }}"
        $sysvolPath = "C:\Windows\SYSVOL\sysvol\$domain"
        $gpoPath = Join-Path $sysvolPath ("Policies\{{$gpoGuid}}")
        $logonScriptsPath = Join-Path $gpoPath "User\Scripts\Logon"

        if (-not (Test-Path $logonScriptsPath)) {
          New-Item -Path $logonScriptsPath -ItemType Directory -Force | Out-Null
        }

        $sourceDir = Join-Path $sysvolPath "{{ bginfo_dir_name }}"
        $filesToCopy = @("apply_bgi.bat", "BGInfo.exe", "bg_config.bgi", "wallpaper.jpg")

        foreach ($file in $filesToCopy) {
          Copy-Item -Path (Join-Path $sourceDir $file) -Destination (Join-Path $logonScriptsPath $file) -Force
        }

        # Create scripts.ini with apply_bgi.bat registered as logon script
        $scriptsIni = Join-Path $logonScriptsPath "scripts.ini"
        $content = @()
        $content += "[Logon]"
        $content += "0CmdLine=apply_bgi.bat"
        $content += "0Parameters="
        $content += "0ScriptDescription=Run BGInfo apply script"
        $content | Out-File -FilePath $scriptsIni -Encoding ASCII -Force

        Write-Output "User Logon script apply_bgi.bat configured in GPO"
      args:
        executable: powershell.exe
      register: gpo_script_setup

    - name: Link the GPO to domain or target OU
      ansible.windows.win_shell: |
        Import-Module GroupPolicy
        $gpoName = "{{ gpo_name }}"
        $linkTarget = "{{ gpo_link_target }}"
        if ([string]::IsNullOrWhiteSpace($linkTarget)) {
          $linkTarget = (Get-ADDomain).DistinguishedName
        }

        $existingLink = Get-GPLink -Target $linkTarget -ErrorAction SilentlyContinue | Where-Object { $_.GPOName -eq $gpoName }

        if (-not $existingLink) {
          New-GPLink -Name $gpoName -Target $linkTarget -LinkEnabled Yes -Enforced No
          Write-Output "GPO linked to $linkTarget"
        } else {
          Write-Output "GPO already linked to $linkTarget"
        }
      args:
        executable: powershell.exe
      register: link_result

    - name: Show summary
      ansible.builtin.debug:
        msg:
          - "Domain DNS: {{ domain_dns }}"
          - "Domain DN: {{ domain_dn }}"
          - "GPO GUID: {{ gpo_guid }}"
          - "{{ gpo_script_setup.stdout }}"
          - "{{ link_result.stdout }}"
